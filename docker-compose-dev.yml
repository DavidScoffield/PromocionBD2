version: '3.7'

services:
  # POSTGRES
  postgres:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - bd-postgres-dev:/var/lib/postgresql/data
      - ./initialization/postgres/init:/docker-entrypoint-initdb.d/
      - ./initialization/postgres/resources:/resources/init/
      - ./initialization/csv:/resources/csv/
    environment:
      POSTGRES_HOST_AUTH_METHOD: password
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
      NAME_CSV_FILE: $NAME_CSV_FILE

  adminer:
    image: adminer
    restart: always
    ports:
      - 1234:8080
    depends_on:
      - postgres

  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin
  #   ports:
  #     - 5050:80
  #   depends_on:
  #     - postgres

  # MONGODB
  mongo:
    image: mongo:5.0.8
    restart: always
    ports:
      - 27017:27017
    volumes:
      - bd-mongo-dev:/data/db
      - ./initialization/mongo/init:/docker-entrypoint-initdb.d/
      - ./initialization/mongo/resources:/resources/init/
      - ./initialization/csv:/resources/csv/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: database
      NAME_CSV_FILE: $NAME_CSV_FILE

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
    depends_on:
      - mongo

  # ELASTICSEARCH
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.1
    restart: always
    ports:
      - $ELASTIC_HOST_PORT:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - bd-elastic-dev:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - ELASTIC_USERNAME=elastic
    networks:
      - elastic-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.1
    restart: always
    ports:
      - $LOGSTASH_HOST_PORT:5000
    volumes:
      - ./initialization/logstash/pipeline:/usr/share/logstash/pipeline/
      - ./initialization/csv:/resources/csv/
      - ./initialization/logstash/init/:/usr/share/logstash/init/
    environment:
      - NAME_CSV_FILE=$NAME_CSV_FILE
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - 'LS_JAVA_OPTS=-Xmx256m -Xms256m'
      - pipeline.workers=1
    networks:
      - elastic-net
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    command: bash /usr/share/logstash/init/elasticDataInit.sh

  kivana:
    image: docker.elastic.co/kibana/kibana:8.4.1
    restart: always
    ports:
      - 5601:5601
    environment:
      - NAME_CSV_FILE=$NAME_CSV_FILE
      - 'ELASTICSEARCH_HOSTS=http://elasticsearch:9200'
    networks:
      - elastic-net
    depends_on:
      - elasticsearch
    links:
      - elasticsearch

volumes:
  bd-postgres-dev:
  bd-mongo-dev:
  bd-elastic-dev:
  # pgadmin:

networks:
  elastic-net:
