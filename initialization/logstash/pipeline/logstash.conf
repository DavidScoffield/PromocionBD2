input {
  file {
    path => "/resources/csv/${NAME_CSV_FILE}.csv"
    start_position => "beginning"
  }
}
filter {
  csv {
    separator => ","
    # autodetect_column_names => true
    skip_header => true
    skip_empty_columns => true
    columns => ["id","source","tmc","severity","start_time","end_time","start_lat","start_lng","end_lat","end_lng","distance_mi","description","number","street","side","city","county","state","zipcode","country","timezone","airport_code","weather_timestamp","temperature_f","wind_chill_f","humidity","pressure_in","visibility_mi","wind_direction","wind_speed_mph","precipitation_in","weather_condition","amenity","bump","crossing","give_way","junction","no_exit","railway","roundabout","station","stop","traffic_calming","traffic_signal","turning_loop","sunrise_sunset","civil_twilight","nautical_twilight","astronomical_twilight"]
  
    # String
    # add_field => {
      # "location" => "%{start_lat},%{start_lng}"
    # } 
    
    # Hash map
    add_field => {
      "[geopoint][lat]" => "%{start_lat}"
      "[geopoint][lon]" => "%{start_lng}"
    }

		convert => {
			"start_lat" => "float"
			"start_lng" => "float"
			"end_lat" => "float"
			"end_lng" => "float"
    }

    remove_field => ["message", "host", "path", "@version", "log", "event"]
  }

  # mutate {
  # }
}

output {
	elasticsearch {
		action => "index"
		index => "accident"
		hosts => ["http://elasticsearch:9200"]
    document_id => "%{id}-%{start_time}"
	}
}